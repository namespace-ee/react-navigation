{"version":3,"sources":["BottomTabBar.tsx"],"names":["DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","chunkArray","array","chunkSize","reduce","result","item","index","chunkIndex","Math","floor","push","shouldUseHorizontalLabels","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","key","options","width","maxTabWidth","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","scrollEnabled","scrollViewProps","pagingIcons","tabCountPerPage","colors","focusedRoute","focusedDescriptor","focusedOptions","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","isKeyboardShown","onHeightChange","React","useContext","BottomTabBarHeightCallbackContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","pages","useMemo","isTabBarHidden","setIsTabBarHidden","useState","selectedPage","setSelectedPage","visible","Animated","Value","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","config","start","finished","hide","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","tabBarBackgroundElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","absoluteFill","content","rightIcon","leftIcon","onMomentumScrollEnd","round","contentOffset","x","undefined","TabRoutes","buildLink","tabBarShowLabel","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","hasHorizontalLabels","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","navigate","name","merge","onLongPress","label","tabBarLabel","title","accessibilityLabel","tabBarAccessibilityLabel","length","params","tabBarTestID","tabBarAllowFontScaling","tabBarButton","tabBarIcon","color","size","tabBarBadge","tabBarBadgeStyle","tabBarLabelStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection","zIndex","justifyContent"],"mappings":"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","sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationHelpers,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  ScrollView,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabNavigationEventMap,\n  BottomTabNavigationOptions,\n} from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst chunkArray = (array: any[], chunkSize: number) => {\n  return array.reduce((result, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!result[chunkIndex]) {\n      result[chunkIndex] = []; // start a new chunk\n    }\n\n    result[chunkIndex].push(item);\n\n    return result;\n  }, []);\n};\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n  scrollEnabled,\n  scrollViewProps,\n  pagingIcons,\n  tabCountPerPage = 4,\n}: Props) {\n  const { colors } = useTheme();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const pages = React.useMemo(() => {\n    if (scrollEnabled) {\n      return chunkArray(state.routes, tabCountPerPage);\n    } else {\n      return [];\n    }\n  }, [tabCountPerPage, scrollEnabled, state.routes]);\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n  const [selectedPage, setSelectedPage] = React.useState<number>(0);\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      {scrollEnabled ? (\n        <View style={styles.content}>\n          {(selectedPage <= 1 && pages?.[selectedPage + 1] && (\n            <View style={styles.rightIcon}>{pagingIcons?.right}</View>\n          )) ||\n            null}\n\n          {(selectedPage >= 1 && (\n            <View style={styles.leftIcon}>{pagingIcons?.left}</View>\n          )) ||\n            null}\n\n          <ScrollView\n            accessibilityRole=\"tablist\"\n            horizontal\n            {...(pagingIcons\n              ? {\n                  onMomentumScrollEnd: ({ nativeEvent }) => {\n                    const index = Math.round(\n                      nativeEvent.contentOffset.x / layout.width\n                    );\n\n                    if (index !== selectedPage) {\n                      setSelectedPage(index);\n                    }\n                  },\n                }\n              : undefined)}\n            {...(scrollViewProps || {})}\n          >\n            <TabRoutes\n              state={state}\n              descriptors={descriptors}\n              focusedOptions={focusedOptions}\n              layout={layout}\n              navigation={navigation}\n              tabCountPerPage={tabCountPerPage}\n            />\n          </ScrollView>\n        </View>\n      ) : (\n        <View style={styles.content}>\n          <TabRoutes\n            state={state}\n            descriptors={descriptors}\n            focusedOptions={focusedOptions}\n            layout={layout}\n            navigation={navigation}\n          />\n        </View>\n      )}\n    </Animated.View>\n  );\n}\n\ninterface ITabRoutesProps {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  focusedOptions: BottomTabNavigationOptions;\n  layout: { height: number; width: number };\n  navigation: NavigationHelpers<ParamListBase, BottomTabNavigationEventMap>;\n  tabCountPerPage?: number;\n}\n\nconst TabRoutes = ({\n  state,\n  descriptors,\n  focusedOptions,\n  layout,\n  navigation,\n  tabCountPerPage,\n}: ITabRoutesProps): JSX.Element => {\n  const dimensions = useSafeAreaFrame();\n  const buildLink = useLinkBuilder();\n\n  const { routes } = state;\n\n  const {\n    tabBarShowLabel,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  return (\n    <>\n      {routes.map((route, index) => {\n        const focused = index === state.index;\n        const { options } = descriptors[route.key];\n\n        const onPress = () => {\n          const event = navigation.emit({\n            type: 'tabPress',\n            target: route.key,\n            canPreventDefault: true,\n          });\n\n          if (!focused && !event.defaultPrevented) {\n            navigation.dispatch({\n              ...CommonActions.navigate({ name: route.name, merge: true }),\n              target: state.key,\n            });\n          }\n        };\n\n        const onLongPress = () => {\n          navigation.emit({\n            type: 'tabLongPress',\n            target: route.key,\n          });\n        };\n\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : route.name;\n\n        const accessibilityLabel =\n          options.tabBarAccessibilityLabel !== undefined\n            ? options.tabBarAccessibilityLabel\n            : typeof label === 'string' && Platform.OS === 'ios'\n            ? `${label}, tab, ${index + 1} of ${routes.length}`\n            : undefined;\n\n        return (\n          <NavigationContext.Provider\n            key={route.key}\n            value={descriptors[route.key].navigation}\n          >\n            <NavigationRouteContext.Provider value={route}>\n              <BottomTabItem\n                width={dimensions.width}\n                route={route}\n                focused={focused}\n                horizontal={hasHorizontalLabels}\n                onPress={onPress}\n                onLongPress={onLongPress}\n                accessibilityLabel={accessibilityLabel}\n                to={buildLink(route.name, route.params)}\n                testID={options.tabBarTestID}\n                allowFontScaling={options.tabBarAllowFontScaling}\n                activeTintColor={tabBarActiveTintColor}\n                inactiveTintColor={tabBarInactiveTintColor}\n                activeBackgroundColor={tabBarActiveBackgroundColor}\n                inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                button={options.tabBarButton}\n                icon={\n                  options.tabBarIcon ??\n                  (({ color, size }) => (\n                    <MissingIcon color={color} size={size} />\n                  ))\n                }\n                badge={options.tabBarBadge}\n                badgeStyle={options.tabBarBadgeStyle}\n                label={label}\n                showLabel={tabBarShowLabel}\n                labelStyle={options.tabBarLabelStyle}\n                iconStyle={options.tabBarIconStyle}\n                tabCountPerPage={tabCountPerPage}\n                style={options.tabBarItemStyle}\n              />\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  leftIcon: {\n    position: 'absolute',\n    zIndex: 9999,\n    left: 0,\n    height: '100%',\n    justifyContent: 'center',\n  },\n  rightIcon: {\n    position: 'absolute',\n    zIndex: 9999,\n    right: 0,\n    justifyContent: 'center',\n    height: '100%',\n  },\n});\n"]}